# Use the official Rust image.
# https://hub.docker.com/_/rust
FROM rust:1.68 as builder

# create a new empty shell project
RUN USER=root cargo new --bin app
WORKDIR /app

# copy over your manifests
COPY ./Cargo.lock ./Cargo.lock
COPY ./Cargo.toml ./Cargo.toml

# this build step will cache your dependencies
RUN cargo build --release
RUN rm src/*.rs

# copy your source tree
COPY ./src ./src

# build for release
# RUN rm ./target/release/deps/app*
RUN cargo build --release

# our final base
# FROM rust:alpine3.17
# FROM alpine:3.17.3
# WORKDIR /app
#
# RUN addgroup -S myuser && adduser -S myuser -G myuser
# # copy the build artifact from the build stage
# COPY --from=builder /app/target/release/rama_fake /bin/rama_fake
#
# # set the startup command to run your binary
# USER myuser
# EXPOSE 4000
# CMD ["/bin/rama_fake"]

FROM debian:bullseye-slim
RUN apt-get update && apt-get install -y extra-runtime-dependencies && rm -rf /var/lib/apt/lists/*
# COPY --from=builder /usr/local/cargo/bin/myapp /usr/local/bin/myapp
COPY --from=builder /app/target/release/rama_fake /usr/local/bin/rama_fake
CMD ["myapp"]
